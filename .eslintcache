[{"D:\\Company-Task\\weather-application\\src\\index.js":"1","D:\\Company-Task\\weather-application\\src\\App.js":"2","D:\\Company-Task\\weather-application\\src\\reportWebVitals.js":"3","D:\\Company-Task\\weather-application\\src\\components\\AllCities.jsx":"4","D:\\Company-Task\\weather-application\\src\\components\\SelectedCity.jsx":"5","D:\\Company-Task\\weather-application\\src\\key.js":"6","D:\\Company-Task\\weather-application\\src\\components\\Home.jsx":"7"},{"size":539,"mtime":1609011768447,"results":"8","hashOfConfig":"9"},{"size":617,"mtime":1608867527348,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":5468,"mtime":1609011992791,"results":"12","hashOfConfig":"9"},{"size":2272,"mtime":1609015820458,"results":"13","hashOfConfig":"9"},{"size":130,"mtime":1608869950422,"results":"14","hashOfConfig":"9"},{"size":3698,"mtime":1609015576685,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"zi7lqu",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Company-Task\\weather-application\\src\\index.js",["32"],"D:\\Company-Task\\weather-application\\src\\App.js",[],["33","34"],"D:\\Company-Task\\weather-application\\src\\reportWebVitals.js",[],"D:\\Company-Task\\weather-application\\src\\components\\AllCities.jsx",[],"D:\\Company-Task\\weather-application\\src\\components\\SelectedCity.jsx",["35"],"import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport keys from './../key';\r\n\r\nconst api = {\r\n    key: keys.API_KEY,\r\n    base: keys.BASE_URL,\r\n};\r\nfunction SelectedCity(props) {\r\n\r\n    const currDate = () => {\r\n        let date = new window.Date().toString();\r\n        date = date.slice(3, 15);\r\n        return date;\r\n    };\r\n\r\n    const [query, setQuery] = useState(props.cityName);\r\n    const [weather, setWeather] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n        fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                setQuery(\"\");\r\n                setWeather(result);\r\n                console.log(result);\r\n                console.log(props.cityName);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Selected City</h1>\r\n            <main style = {{textAlign: 'center'}}>\r\n                <div className = \"search-container\">\r\n                    \r\n                </div>\r\n\r\n                {typeof weather.main != \"undefined\" ? (\r\n                    <div className = \"location-container\">\r\n                        <div className = \"location\">\r\n                            {weather.name}, {weather.sys.country}\r\n                        </div>\r\n                        <div className = \"date\">\r\n                            {currDate(new Date())}\r\n                        </div>\r\n                        <div className = \"weather-container\">\r\n                            <div className = \"temperature\">\r\n                                <div>current temp: {weather.main.temp}<span>&#176;</span>C</div>\r\n                                <div>max temp: {weather.main.temp_max}<span>&#176;</span>C</div>\r\n                                <div>min temp: {weather.main.temp_min}<span>&#176;</span>C</div>\r\n                            </div>\r\n                            <div className = \"weather\">\r\n                                {weather.weather[0].main}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    ) : (\r\n                        \"\"\r\n                    )}\r\n            </main>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SelectedCity\r\n","D:\\Company-Task\\weather-application\\src\\key.js",[],"D:\\Company-Task\\weather-application\\src\\components\\Home.jsx",[],{"ruleId":"36","severity":1,"message":"37","line":4,"column":8,"nodeType":"38","messageId":"39","endLine":4,"endColumn":11},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":30,"column":8,"nodeType":"46","endLine":30,"endColumn":10,"suggestions":"47"},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["48"],"no-negated-in-lhs",["49"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.cityName' and 'query'. Either include them or remove the dependency array.","ArrayExpression",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [props.cityName, query]",{"range":"53","text":"54"},[816,818],"[props.cityName, query]"]